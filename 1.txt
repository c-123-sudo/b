#include <stdio.h> 
#include <string.h> 
#define N 17 
char t[50], cs[50], g[] = "10001000000100001"; 
int a, e, c; 
 
void xor_crc() { for (c = 1; c < N; c++) cs[c] = (cs[c] == g[c]) ? '0' : '1'; } 
void crc() { 
    for (e = 0; e < N; e++) cs[e] = t[e]; 
    do { 
        if (cs[0] == '1') xor_crc(); 
        for (c = 0; c < N - 1; c++) cs[c] = cs[c + 1]; 
        cs[c] = t[e++]; 
    } while (e <= a + N - 1); 
} 
 
int main() { 
    printf("Enter data: "); 
    scanf("%s", t); 
    a = strlen(t); 
    for (e = a; e < a + N - 1; e++) t[e] = '0'; 
    t[e] = '\0'; 
 
    printf("\nGenerating polynomial: %s", g); 
    printf("\nModified data is: %s", t); 
 
    crc(); 
    cs[N-1] = '\0'; 
    printf("\nCRC checksum is: %s", cs); 
 
    for (e = a; e < a + N - 1; e++) t[e] = cs[e - a]; 
    t[e] = '\0'; 
    printf("\nFinal codeword transmitted is: %s", t); 
 
    printf("\nTest error detection 0(yes) 1(no)?: "); 
    scanf("%d", &e); 
    if (e == 0) { 
        int pos; 
        do { 
            printf("Enter the position where error is to be inserted: "); 
            scanf("%d", &pos); 
        } while (pos <= 0 || pos > a + N - 1); 
        t[pos - 1] = (t[pos - 1] == '0') ? '1' : '0'; 
        printf("\nErroneous data: %s", t); 
    } 
 
    crc(); 
    cs[N-1] = '\0'; 
    for (e = 0; e < N - 1 && cs[e] != '1'; e++); 
    printf("\nCRC checksum is: %s", cs); 
    printf(e < N - 1 ? "\nError detected\n" : "\nNo error detected\n"); 
    return 0; 
}
