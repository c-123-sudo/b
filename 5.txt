#include <stdio.h> 
#define INF 9999 
#define N 7 
int main() { 
    int G[N][N] = { 
        {0,0,1,2,0,0,0},{0,0,2,0,0,3,0},{1,2,0,1,3,0,0}, 
        {2,0,1,0,0,0,1},{0,0,3,0,0,2,0},{0,3,0,0,2,0,1},{0,0,0,1,0,1,0}}; 
    int d[N], v[N] = {0}, i, j, c = 1, min, next, start = 0; 
    for (i = 0; i < N; i++) d[i] = (G[start][i] ? G[start][i] : INF); 
    d[start] = 0; v[start] = 1; 
    while (c < N-1) { 
        min = INF; 
        for (i = 0; i < N; i++) 
            if (d[i] < min && !v[i]) min = d[i], next = i; 
        v[next] = 1; 
        for (i = 0; i < N; i++) 
            if (!v[i] && min + (G[next][i]?G[next][i]:INF) < d[i]) 
                d[i] = min + G[next][i]; 
        c++; 
    } 
    for (i = 0; i < N; i++) if (i != start) printf("Dist to %d: %d\n", i, d[i]); 
    return 0; 
} 
